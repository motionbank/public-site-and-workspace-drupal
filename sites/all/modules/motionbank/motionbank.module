<?php

	// node types
	define( 'MOTIONBANK_TYPE_TODOITEM', 'to_do_item');
	// menu names
	define( 'MOTIONBANK_BLOCK_LOCALTASKS', 'local_tasks' );
	define( 'MOTIONBANK_BLOCK_NODELINKS', 'node_links' );
	
	
	function xxx_motionbank_views_data_alter ( &$data )
	{
		/*
		'filter' => array(
	      'help' => t('Show only content that is new or updated.'),
	      'handler' => 'views_handler_filter_history_user_timestamp',
	    ),
		*/
		$data['node']['new_comments']['filter'] = array(
	      'help' => t('Show only content that is new or updated.'),
	      'handler' => 'views_handler_field_node_new_comments',
		);
	}
	
	/**
	 *	hook_views_query_alter
	 *
	 *	This fixes the order of to do items to show items without
	 *	due date at the end of the list.
	 */
	function motionbank_views_query_alter ( &$view, &$query )
	{
		if ( $view->name == 'to_do_list' ) 
		{
			//var_dump( $query );
			$orderby_add = array(
				'field'=>'ISNULL('.$query->orderby[0]['field'].')',
				'direction'=>$query->orderby[0]['direction']
			);
			$query->orderby = array_merge(
				array($orderby_add),
				$query->orderby
			);
			//var_dump( $query->orderby );
		}
	}
	
	/**
	 *	hook_menu
	 *	http://api.drupal.org/api/drupal/modules--system--system.api.php/function/hook_menu/7
	 */
	function motionbank_menu ()
	{
		global $user;
		
		$items = array();

		return $items;
	}
	
	/** 
	 *	hook_node_prepare
	 *	http://api.drupal.org/api/drupal/modules--node--node.api.php/function/hook_node_prepare/7
	 */
	
	function motionbank_node_prepare ( $node )
	{
		switch ( $node->type )
		{
			case MOTIONBANK_TYPE_TODOITEM:
				_motionbank_to_do_item_prepare( $node );
				break;
		}
	}
	
	/**
	 *	Prepare (pre add/edit) nodes of type 'to do item'
	 */
	function _motionbank_to_do_item_prepare ( $node )
	{
		if ( $node->type !== MOTIONBANK_TYPE_TODOITEM ) return;
		global $user;
		
		// assign to current user if not already set
		if ( empty($node->field_assignees) )
		{
			$node->field_assignees = array( "und" => array( array( "uid" => $user->uid ) ) ); 
		}
	}

	/**
	 *	hook_block_info
	 *	http://api.drupal.org/api/drupal/modules--block--block.api.php/function/hook_block_info/7
	 */
	function motionbank_block_info ()
	{
		$blocks[MOTIONBANK_BLOCK_LOCALTASKS] = 
			array( 'info' => t('Local tasks block'),
        		   'cache' => DRUPAL_CACHE_PER_PAGE  );
      
    	$blocks[MOTIONBANK_BLOCK_NODELINKS] = 
			array( 'info' => t('Node links block'),
            	   'cache' => DRUPAL_CACHE_PER_PAGE  );

	    return $blocks;
	}
	
	
	/**
	 *	hook_block_view
	 *	http://api.drupal.org/api/drupal/modules--block--block.api.php/function/hook_block_view/7
	 */
	function motionbank_block_view ( $block_name = '' )
	{
		$block = array();
		
		switch ( $block_name )
		{
			case MOTIONBANK_BLOCK_LOCALTASKS:
				$object = _mb_get_current_object();
                $title = t('Local tasks');
                if ( $object && $object->nid )
				{
					if ( $object->uri )
                    	$title = l( $object->title, $object->uri['path'] );
					else if ( $object->path )
                    	$title = l( $object->title, $object->path );
					else
                    	$title = l( $object->title, 'node/'.$object->nid );
				}
                $block = array(
                    'subject' => $title,
                    'content' => _motionbank_render_block_1()
                );
				break;
			case MOTIONBANK_BLOCK_NODELINKS:
	            $block = array(
                    'subject' => t('Node links'),
                    'content' => _motionbank_render_block_2()
                );
				break;
		}
		
		return $block;
	}
	
	
    /**
     *  Render local tasks as list
     */
    
    function _motionbank_render_block_1 ()
    {
        $primary = menu_primary_local_tasks();

        if ( empty($primary) ) // hides the block
            return null;
        
		$primary = drupal_render($primary);
		
        $secondary = menu_secondary_local_tasks();
        
        if ( !empty($secondary) )
        {
			$secondary = drupal_render($secondary);
            $primary = preg_replace( '/(<li[^>]*class="active"[^>]*>.+)(<\/li>)/im',
									 '\1<ul>'.$secondary.'</ul>\2', $primary );
        }
        
        $links = _motionbank_render_block_2();
        
        return '<ul'.(empty($links)?'':' class="chained"').'>'.$primary.'</ul>'.$links;
    }
    
    /**
     *  Render node links block
     */
    
    function _motionbank_render_block_2 ()
    {
        $node = _mb_get_current_object();
        
        if ( empty($node->nid) ) return null;
        
		$node_rendered = node_view( $node );
		$links = $node_rendered['links'];
        
        return drupal_render($links);
    }
    
    /**
     *  Get currently viewed object based on menu
     */
    
    function _mb_get_current_object ()
    {
        static $current_object;
        if ( !isset($current_object) )
            $current_object = menu_get_object();
        return $current_object;
    }